Program.Sub.ScreenSU.Start
gui.SS_Form2..create
gui.SS_Form2..caption("GCG Employee Incentive Pay")
gui.SS_Form2..size(4135,2540)
gui.SS_Form2..position(0,0)
gui.SS_Form2..alwaysontop(False)
gui.SS_Form2..fontname("Arial")
gui.SS_Form2..fontsize(8)
gui.SS_Form2..forecolor(0)
gui.SS_Form2..fontstyle(,,,,)
gui.SS_Form2..BackColor(-2147483633)
gui.SS_Form2..controlbox(True)
gui.SS_Form2..maxbutton(False)
gui.SS_Form2..minbutton(False)
gui.SS_Form2..mousepointer(0)
gui.SS_Form2..moveable(True)
gui.SS_Form2..sizeable(False)
gui.SS_Form2..ShowInTaskBar(True)
gui.SS_Form2..titlebar(True)
gui.SS_Form2..event(unload,ss_form2_unload)
gui.SS_Form2.lbl_dtpPayenddte.create(label,"Check Date",True,1800,200,1,100,135,True,0,Arial,8,-2147483633,0)
gui.SS_Form2.dtpPayenddte.create(datepicker)
gui.SS_Form2.dtpPayenddte.visible(True)
gui.SS_Form2.dtpPayenddte.size(1800,345)
gui.SS_Form2.dtpPayenddte.position(100,335)
gui.SS_Form2.dtpPayenddte.enabled(True)
gui.SS_Form2.dtpPayenddte.fontname("Arial")
gui.SS_Form2.lbl_dtpBegDate.create(label,"Beginning Date",True,1800,200,1,100,850,True,0,Arial,8,-2147483633,0)
gui.SS_Form2.dtpBegDate.create(datepicker)
gui.SS_Form2.dtpBegDate.visible(True)
gui.SS_Form2.dtpBegDate.size(1800,345)
gui.SS_Form2.dtpBegDate.position(100,1050)
gui.SS_Form2.dtpBegDate.enabled(True)
gui.SS_Form2.dtpBegDate.fontname("Arial")
gui.SS_Form2.dtpBegDate.event(change,dtpbegdate_change)
gui.SS_Form2.lbl_dtpEndDate.create(label,"Ending Date",True,1800,200,1,1985,850,True,0,Arial,8,-2147483633,0)
gui.SS_Form2.dtpEndDate.create(datepicker)
gui.SS_Form2.dtpEndDate.visible(True)
gui.SS_Form2.dtpEndDate.size(1800,345)
gui.SS_Form2.dtpEndDate.position(1985,1050)
gui.SS_Form2.dtpEndDate.enabled(True)
gui.SS_Form2.dtpEndDate.fontname("Arial")
gui.SS_Form2.cmdOk.create(button)
gui.SS_Form2.cmdOk.Caption("Ok")
gui.SS_Form2.cmdOk.visible(True)
gui.SS_Form2.cmdOk.size(1000,360)
gui.SS_Form2.cmdOk.position(100,1565)
gui.SS_Form2.cmdOk.enabled(True)
gui.SS_Form2.cmdOk.fontname("Arial")
gui.SS_Form2.cmdOk.fontsize(8)
gui.SS_Form2.cmdOk.event(click,cmdok_click)
gui.SS_Form2.dtpBegDate.tabstop(true)
gui.SS_Form2.dtpBegDate.tabindex(1)
gui.SS_Form2.dtpEndDate.tabstop(true)
gui.SS_Form2.dtpEndDate.tabindex(2)
gui.SS_Form2.cmdOk.tabstop(true)
gui.SS_Form2.cmdOk.tabindex(3)



gui.Form2..create
gui.Form2..caption("")
gui.Form2..size(3705,1230)
gui.Form2..position(0,0)
gui.Form2..alwaysontop(False)
gui.Form2..fontname("Arial")
gui.Form2..fontsize(8)
gui.Form2..forecolor(0)
gui.Form2..fontstyle(,,,,)
gui.Form2..BackColor(-2147483633)
gui.Form2..controlbox(True)
gui.Form2..maxbutton(True)
gui.Form2..minbutton(True)
gui.Form2..mousepointer(0)
gui.Form2..moveable(True)
gui.Form2..sizeable(True)
gui.Form2..ShowInTaskBar(True)
gui.Form2..titlebar(True)
gui.Form2.lbl1.create(label,"Creating Incentive Pay Records",True,3120,255,1,200,200,True,2,Arial,10,-2147483633,0)
gui.Form2.lbl1.fontstyle(True,False,False,False)



Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.UDT.EmpMstr.Define("Trmnl",String)
Variable.UDT.EmpMstr.Define("Employee",String,Employee)
Variable.UDT.EmpMstr.Define("Name",String,Name)
Variable.UDT.EmpMstr.Define("Shift",String,Shift)
Variable.UDT.EmpMstr.Define("Dept",String,Dept_Employee)
Variable.UDT.EmpMstr.Define("BalGrp",String,PR_Balance_Group)
Variable.UDT.EmpMstr.Define("IncPay",Float)
Variable.UDT.EmpMstr.Define("WeekNo",Long)
Variable.uGlobal.uEmpMstr.Declare("EmpMstr")

Variable.UDT.Points.Define("Trmnl",String)
Variable.UDT.Points.Define("Employee",String,Employee)
Variable.UDT.Points.Define("Name",String)
Variable.UDT.Points.Define("Date_In",Date)
Variable.UDT.Points.Define("Date_Out",Date)
Variable.UDT.Points.Define("Shift",Long)
Variable.UDT.Points.Define("Dept",String)
Variable.UDT.Points.Define("Bal_Group",String)
Variable.UDT.Points.Define("Occ_Id",Long)
Variable.UDT.Points.Define("Occ_Name",String)
Variable.UDT.Points.Define("Occ_Point",String,Occ_Point)
Variable.UDT.Points.Define("Occ_Date",Date)
Variable.uGlobal.uPoints.Declare("Points")

Variable.UDT.PayCompany.Define("Company",String,Company)
Variable.uGlobal.uPayCompany.Declare("PayCompany")

Variable.UDT.Employees.Define("Employee",String,Employee)
Variable.uGlobal.uEmployees.Declare("Employees")

Variable.UDT.EBIEmpl.Define("Employee",String,Employee)
Variable.uGlobal.uEBIEmpl.Declare("EBIEmpl")

Variable.UDT.HourEligEmp.Define("Employee",String,Employee)
Variable.UDT.HourEligEmp.Define("Week1_Flag",String,Week1_Flag)
Variable.UDT.HourEligEmp.Define("Week2_Flag",String,Week2_Flag)
Variable.UDT.HourEligEmp.Define("Trmnl",String,Trmnl)
Variable.UDT.HourEligEmp.Define("Beg_Pay_Prd",Date,Beg_Pay_Prd)
Variable.UDT.HourEligEmp.Define("End_Pay_Prd",Date,End_Pay_Prd)
Variable.uGlobal.uHourEligEmp.Declare("HourEligEmp")
Variable.Global.sMsg.Declare(String)
Program.Sub.Preflight.End


Program.Sub.Main.Start
'2011-12-20 - jct
'For Elevating Boats
'custom hook/new menu item
'used with ATG_Emp_Occurence_Var2.gas

V.Local.sSel.Declare(String)

'EBI connection
F.ODBC.Connection!ConX.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

'get check date from EBI
F.ODBC.Connection!ConX.OpenRecordsetRO("rstEBI","select distinct ERN_CHECK_DATE from V_PAYROLL_TC_RATES where year(Ern_Check_Date)<>'1900'")
	F.Intrinsic.Control.If(V.ODBC.ConX!rstEBI.EOF,=,False)
		Gui.SS_Form2.dtpPayenddte.Value(V.ODBC.ConX!rstEBI.FieldVal!ERN_CHECK_DATE)
		Gui.SS_Form2.dtpPayenddte.Enabled(false)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Check Date not on file.  Be sure to specify Check Date.")
	F.Intrinsic.Control.EndIf
F.ODBC.ConX!rstEBI.close

'get all employees
V.uGlobal.uEBIEmpl.Redim(-1,-1)
F.ODBC.Connection!ConX.OpenRecordsetRO("rstEBI","select Employee from Employee_Mstr order by Employee")
	F.Intrinsic.Control.If(V.ODBC.ConX!rstEBI.EOF,=,False)
		F.Intrinsic.Variable.LoadUDTFromRecordset("ConX","rstEBI","v.uGlobal.uEBIEmpl",False)
	F.Intrinsic.Control.EndIf
F.ODBC.ConX!rstEBI.Close

Gui.SS_Form2..Show


Program.Sub.Main.End


Program.Sub.EligEmployees.Start


V.Local.ssel.Declare(String)
V.Local.iFor.Declare(Long)
V.Local.dEOWeek.Declare(Date)
V.Local.dBOWeek.Declare(Date)
V.Local.ifWeeks.Declare(Long)
V.Local.sret.Declare(String)
V.Local.iWeek.Declare(Long)

V.uGlobal.uEmpMstr.Redim(-1,-1)
V.uGlobal.uPoints.Redim(-1,-1)

F.Intrinsic.Date.DateAdd("D",6,V.Screen.SS_Form2!dtpBegDate.Value,V.Local.dEOWeek)
V.Local.dBOWeek.Set(V.Screen.SS_Form2!dtpBegDate.Value)

'get week number
F.Intrinsic.Control.If(V.Screen.SS_Form2!dtpBegDate.Value,=,V.uGlobal.uHourEligEmp!Beg_Pay_Prd)
	V.Local.iWeek.set(1)
	F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uHourEligEmp!Week2_Flag,"Y")
F.Intrinsic.Control.Else
	V.Local.iWeek.set(2)
	F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uHourEligEmp!Week1_Flag,"Y")
F.Intrinsic.Control.EndIf
F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uHourEligEmp)

'get all active employee records, for the current company
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel","select Employee,Name,Shift,Dept_Employee,Pr_Balance_Group from V_Employee_Mstr where year(Date_Termination)='1900' and Pay_Type<>'S' and Boat_Employee <>'Y' order by Employee")
	F.Intrinsic.Control.If(V.ODBC.con!rstSel.EOF,=,False)
		F.Intrinsic.Variable.LoadUDTFromRecordset("Con","rstSel","v.uGlobal.uEmpMstr",False,1)
	F.Intrinsic.Control.EndIf
F.ODBC.con!rstSel.Close

'set WeekNo to see if flags are set for hours earned
F.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uEmpMstr!WeekNo,V.Local.iWeek)

'get list of employees with points for each week
'F.Intrinsic.Control.For(V.Local.ifWeeks,1,2,1)
V.Local.ssel.Set("select Employee, sum(Occ_Point) as Occ_Point from ATG_Emp_Points_Occ ")
F.Intrinsic.String.Concat(V.Local.ssel," where Occ_Date between'",V.Local.dBOWeek.pervasivedate,"' and '",V.Local.dEOWeek.pervasivedate,"' group by Employee",V.Local.ssel)
F.ODBC.Connection!con.OpenRecordsetRO("rstsel",V.Local.ssel)
	F.Intrinsic.Control.If(V.ODBC.con!rstSel.EOF,=,False)
		F.Intrinsic.Variable.LoadUDTFromRecordset("Con","rstSel","V.uGlobal.uPoints",False,1)
	F.Intrinsic.Control.EndIf
F.ODBC.con!rstSel.Close

'delete any records where point total is 0
Function.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uPoints!Occ_Point,0)
F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uPoints)

'for each employee
F.Intrinsic.Control.For(V.Local.iFor,V.uGlobal.uEmpMstr!Employee.LBound,V.uGlobal.uEmpMstr!Employee.UBound,1)
	'see if employee got points for the current week
	Function.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uPoints!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,V.Local.sret)
	F.Intrinsic.Control.If(V.Local.sret.Trim,=,"")
	'if no points, see if the required hours for the week were reached
		F.Intrinsic.Control.If(V.Local.iWeek,=,1)
			F.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uHourEligEmp!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,V.uGlobal.uHourEligEmp!Week1_Flag,"Y",V.Local.sret)
		F.Intrinsic.Control.ElseIf(V.Local.iWeek,=,2)
			F.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uHourEligEmp!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,V.uGlobal.uHourEligEmp!Week2_Flag,"Y",V.Local.sret)
		F.Intrinsic.Control.EndIf

		'if employee not found as flagged for having eligible hours, flag emp maser record
		F.Intrinsic.Control.If(V.Local.sret.Trim,=,"")
			F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uEmpMstr!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee)
		F.Intrinsic.Control.Else
		'if no points, and required hours reached, add 40 to each employee pay record
			F.Intrinsic.Math.Add(V.uGlobal.uEmpMstr(v.Local.iFor)!IncPay,40,V.uGlobal.uEmpMstr(v.Local.iFor)!IncPay)
		F.Intrinsic.Control.EndIf

	'if points found, flag for deletion
	F.Intrinsic.Control.Else
		F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uEmpMstr!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Next(V.Local.iFor)
F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uEmpMstr)


F.Intrinsic.Control.If(V.uGlobal.uEmpMstr!Employee.UBound,>,-1)
	'verify employees are in EBI
	F.Intrinsic.Variable.UDTFlagAll(V.uGlobal.uEmpMstr)
	F.Intrinsic.Control.For(V.Local.iFor,V.uGlobal.uEmpMstr!Employee.LBound,V.uGlobal.uEmpMstr!Employee.UBound,1)
		F.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uEBIEmpl!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,V.Local.sret)
		'if employee is found in EBI, unflag
		F.Intrinsic.Control.If(V.Local.sret.Trim,<>,"")
			F.Intrinsic.Variable.UDTMultiunFlag(V.uGlobal.uEmpMstr!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee)
		'if employee is not found in EBI, list on on-screen-msg
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Concat(V.Global.smsg,V.Ambient.NewLine,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,"  ",V.uGlobal.uEmpMstr(v.Local.iFor)!Name,V.Global.smsg)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iFor)
F.Intrinsic.Control.EndIf
F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uEmpMstr)





Program.Sub.EligEmployees.End


program.sub.ss_form2_unload.start

F.ODBC.Connection!ConX.Close
F.Intrinsic.Control.End

program.sub.ss_form2_unload.end


program.sub.cmdok_click.start

Gui.SS_Form2..Visible(false)
Gui.Form2..Show

V.Local.bExists.Declare(Boolean)
V.Local.sFile.Declare(String)
V.Local.sDsn.Declare(String)
V.Local.iFor.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sSel.Declare(String)

'delete an existing pay file
F.Intrinsic.String.Concat(V.Caller.FilesDir,"\BOATEBI.TXT",V.Local.sFile)
F.Intrinsic.File.Exists(V.Local.sFile,V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists,=,True)
		F.Intrinsic.File.DeleteFile(V.Local.sFile)
	F.Intrinsic.Control.EndIf

'get all company codes
V.uGlobal.uPayCompany.Redim(-1,-1)
F.ODBC.Connection!ConX.OpenRecordsetRO("rstSel","select Company from Payroll_Company order by Company")
	F.Intrinsic.Control.If(V.ODBC.ConX!rstSel.EOF,=,False)
		F.Intrinsic.Variable.LoadUDTFromRecordset("ConX","rstSel","v.uGlobal.uPayCompany",False)
	F.Intrinsic.Control.EndIf
F.ODBC.ConX!rstSel.Close

'get list of all employees that have minimum required hours
V.uGlobal.uHourEligEmp.Redim(-1,-1)
F.Intrinsic.String.Concat("select * from GCG_3481_Incentv_Pay_Elig where Beg_Pay_Prd='",V.Screen.SS_Form2!dtpBegDate.Value,"' or End_Pay_Prd='",V.Screen.SS_Form2!dtpEndDate.Value,"'",V.Local.sSel)
F.ODBC.Connection!ConX.OpenRecordsetRO("rstSel",V.Local.sSel)
	F.Intrinsic.Control.If(V.ODBC.ConX!rstSel.EOF,=,False)
		F.Intrinsic.Variable.LoadUDTFromRecordset("ConX","rstSel","v.uGlobal.uHourEligEmp",False)
	F.Intrinsic.Control.EndIf
F.ODBC.ConX!rstSel.Close

V.Local.bExists.Set(False)
V.uGlobal.uEmployees.Redim(-1,-1)
'get pay information for each company
F.Intrinsic.Control.For(V.Local.iFor,V.uGlobal.uPayCompany!Company.LBound,V.uGlobal.uPayCompany!Company.UBound,1)
'if EBI is on list, skip for now
	F.Intrinsic.Control.If(V.uGlobal.uPayCompany(v.Local.iFor)!Company,<>,V.Caller.CompanyCode)
		F.Intrinsic.String.Concat("Global_",V.uGlobal.uPayCompany(v.Local.iFor)!Company,V.Local.sDsn)
		F.ODBC.Connection!Con.OpenConnection(V.Local.sDsn,V.Ambient.PUser,V.Ambient.PPass)
			'get a running list of all employees in all companies
			F.ODBC.Connection!Con.OpenRecordsetRO("rstSel","select Employee from V_Employee_Mstr where year(Date_Termination)='1900' and Pay_Type<>'S' and Boat_Employee <>'Y' order by Employee")
				F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
					F.Intrinsic.Variable.LoadUDTFromRecordset("Con","rstSel","V.uGlobal.uEmployees",True)
				F.Intrinsic.Control.EndIf
			F.ODBC.Con!rstSel.Close
			'call sub to see which empoyees get incentive pay, based on points
			F.Intrinsic.Control.CallSub(Eligemployees)
			'if uEmpMstr is empty, no eligible employees were found, so don't create record
			F.Intrinsic.Control.If(V.uGlobal.uEmpMstr!Employee.UBound,<>,-1)
				'call sub to create pay record
				F.Intrinsic.Control.CallSub(Createrecord)
			F.Intrinsic.Control.EndIf
		F.ODBC.Connection!Con.Close
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iFor)

'create records for calling company
F.ODBC.Connection!Con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)
	'call sub to see which empoyees get incentive pay, based on points
	F.Intrinsic.Control.CallSub(Eligemployees)

	'remove any duplicate employees
	'got running list of all employees from separate companies.  Need to remove any that are in EBI, but already had records created because they were in another company
	F.Intrinsic.Control.For(V.Local.iFor,V.uGlobal.uEmpMstr!Employee.LBound,V.uGlobal.uEmpMstr!Employee.UBound,1)
		F.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uEmployees!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
			F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uEmpMstr!Employee,V.uGlobal.uEmpMstr(v.Local.iFor)!Employee)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iFor)
	F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uEmpMstr)

	'if uEmpMstr is empty, no eligible employees were found, so don't create record
	F.Intrinsic.Control.If(V.uGlobal.uEmpMstr!Employee.UBound,<>,-1)
		'call sub to create pay record
		F.Intrinsic.Control.CallSub(Createrecord)
	F.Intrinsic.Control.EndIf
F.ODBC.Connection!Con.Close

F.Intrinsic.Control.If(V.Global.sMsg.Trim,<>,"")
	F.Intrinsic.String.Concat("Incentive Pay not added for: ",V.Global.sMsg,V.Global.sMsg)
	F.Intrinsic.UI.Msgbox(V.Global.sMsg)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(Ss_form2_unload)


program.sub.cmdok_click.end


Program.Sub.CreateRecord.Start

V.Local.iFor.Declare(Long)
V.Local.sSel.Declare(String)
V.Local.sDel.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sPrdEndDte.Declare(String)
V.Local.sUpdate.Declare(String)
V.Local.sData.Declare(String)
V.Local.sCheckDate.Declare(String)

F.Intrinsic.String.Concat(V.Caller.FilesDir,"\BOATEBI.TXT",V.Local.sFile)
F.Intrinsic.File.String2File(V.Local.sFile,"")

'format period end date
F.ODBC.Connection!ConX.OpenRecordsetRO("rstY","select ERN_CHECK_Per_End from V_PAYROLL_TC_RATES")
	F.Intrinsic.Control.If(V.ODBC.ConX!rstY.EOF,=,False)
		F.Intrinsic.String.Format(V.ODBC.ConX!rstY.FieldVal!ERN_CHECK_Per_End,"mmddyy",V.Local.sPrdEndDte)
	F.Intrinsic.Control.EndIf
F.ODBC.ConX!rstY.close

'format period ending date
F.Intrinsic.String.Format(V.Screen.SS_Form2!dtpPayenddte.Value,"mmddyy",V.Local.sCheckDate)

'for every employee
F.Intrinsic.Control.For(V.Local.iFor,V.uGlobal.uEmpMstr!Employee.LBound,V.uGlobal.uEmpMstr!Employee.UBound,1)
	F.Intrinsic.String.Concat("select * from PAYROLL_TC_RATES where EMPLOYEE='",V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,"' and EARNINGS='06' and ERN_CHECK_Date='",V.Local.sCheckDate,"'",V.Local.sSel)
	F.ODBC.Connection!ConX.OpenRecordsetRO("rstY",V.Local.sSel)
		'if 06 record exists, update it.  Assumes if a record exists, they have already gotten 1 week at 40, so this will be the second, resulting in 80 pay
		F.Intrinsic.Control.If(V.ODBC.ConX!rstY.EOF,=,False)
			F.Intrinsic.Math.Add(V.uGlobal.uEmpMstr(v.Local.iFor)!IncPay,V.ODBC.ConX!rstY.FieldVal!Reg_Dollars_1,V.uGlobal.uEmpMstr(v.Local.iFor)!IncPay)
			F.Intrinsic.String.Concat("update PAYROLL_TC_RATES set REG_DOLLARS_1='",V.uGlobal.uEmpMstr(v.Local.iFor)!IncPay,"'where EMPLOYEE='",V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,"'and EARNINGS='06' and ERN_CHECK_Date='",V.Local.sCheckDate,"'",V.Local.sUpdate)
			F.ODBC.Connection!ConX.Execute(V.Local.sUpdate)
		'if 06 record does not exist, write line to create new one.  Assumes if a record does not exist, this is 1st  week at 40
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Concat(V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,"*!*1*!*","06","*!*",0,"*!*",V.uGlobal.uEmpMstr(v.Local.iFor)!IncPay,"*!*0*!*0*!*","0","*!*0*!*0*!*0*!*",V.uGlobal.uEmpMstr(v.Local.iFor)!Dept,"*!*",0,"*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*",V.uGlobal.uEmpMstr(v.Local.iFor)!Dept,"*!*",0,"*!*0*!*0*!*0*!*0*!*0*!*0*!*0*!*",V.uGlobal.uEmpMstr(v.Local.iFor)!Dept,"*!*",V.Local.sCheckDate,"*!*",V.Local.sPrdEndDte,"*!*",V.Ambient.NewLine,V.local.sdata)
			F.Intrinsic.File.Append2File(V.Local.sFile,V.Local.sData)
			'delete deduction record.  it will be created by xupldebi
' 3/21/2013 -- remove delete deduction record
'			F.Intrinsic.String.Concat("delete from PAYROLL_TC_RATES where EMPLOYEE='",V.uGlobal.uEmpMstr(v.Local.iFor)!Employee,"' and EARNINGS='DD'",V.Local.sDel)
'			F.ODBC.Connection!ConX.Execute(V.Local.sDel)
		F.Intrinsic.Control.EndIf
	F.ODBC.ConX!rstY.Close
F.Intrinsic.Control.Next(V.Local.iFor)

'if concatenated string is not empty, upload the records
F.Intrinsic.Control.If(V.Local.sData.Trim,<>,"")
	F.Intrinsic.String.Concat(V.Ambient.DblQuote,V.Caller.CompanyCode,V.Local.sFile,V.Ambient.DblQuote,V.Local.sFile)
	F.Intrinsic.Task.LaunchGSSSync("XUPLDEBI","-C",V.Local.sFile)
F.Intrinsic.Control.EndIf


Program.Sub.CreateRecord.End


program.sub.dtpbegdate_change.start

V.Local.dEndDte.Declare(Date)

F.Intrinsic.Date.DateAdd("D",6,V.Screen.SS_Form2!dtpBegDate.Value,V.Local.dEndDte)
Gui.SS_Form2.dtpEndDate.Value(V.Local.dEndDte)

program.sub.dtpbegdate_change.end


Program.Sub.Comments.Start
${$0$}$GCG_Employee_Incentive$}$JCT$}$10/7/2010
${$2$}$$}$$}$1$}$2$}$$}$7/19/2012 1:24:04 PM$}$'used with ATG_Emp_Occurence_Var2.gas
${$2$}$$}$$}$0$}$2$}$$}$12/19/2011$}$ATG_Emp_Points_Occ
${$4$}$0$}$$}$0$}$-1$}$JCT$}$12/20/2011 1:24:48 PM$}$'For Elevating Boats
'custom hook/new menu item


${$4$}$0$}$$}$1$}$-1$}$JCT$}$7/19/2012 1:26:51 PM$}$change to read new custom table
GCG_Incentv_Pay_Elig
to know if an employee is eligible for th incentive pay, based on the number of hours worked in each of the 2 weeks in the pay period
Program.Sub.Comments.End
Program.Sub.ScreenSS.Start
SS_Form2{{CAPTION::GCG Employee Incentive Pay
SS_Form2.CTRL{{NAME::dtpPayenddte\\TYPE::6\\CAPTION::Check Date\\GROUP::1\\BROWSER::0\\SIZE::1
SS_Form2.CTRL{{NAME::dtpBegDate\\TYPE::6\\CAPTION::Beginning Date\\TABSTOP::1\\GROUP::2\\BROWSER::0\\SIZE::1
SS_Form2.CTRL{{NAME::dtpEndDate\\TYPE::6\\CAPTION::Ending Date\\TABSTOP::2\\GROUP::2\\BROWSER::0\\SIZE::1
SS_Form2.CTRL{{NAME::cmdOk\\TYPE::5\\CAPTION::Ok\\TABSTOP::3\\GROUP::3\\BROWSER::0\\SIZE::1

Program.Sub.ScreenSS.End

